{"version":3,"sources":["../../src/server/utils/logger.js"],"names":["internalLogger","Logger","name","streams","stream","process","stdout","level","env","NODE_ENV","widgetType","child","widget_type"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,cAAc,GAAG,IAAIC,eAAJ,CAAW;AAC/BC,EAAAA,IAAI,EAAJA,aAD+B;AAE/BC,EAAAA,OAAO,EAAE,CACN;AACGC,IAAAA,MAAM,EAAEC,OAAO,CAACC,MADnB;AAEGC,IAAAA,KAAK,EAAEF,OAAO,CAACG,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,MAAxC,GAAiD;AAF3D,GADM;AAFsB,CAAX,CAAvB;AAUA;;;;;;;;;;AAUA;;;;;;AAKe,kBAAUC,UAAV,EAAsB;AAClC,SAAOV,cAAc,CAACW,KAAf,CAAqB;AAAEC,IAAAA,WAAW,EAAEF;AAAf,GAArB,EAAkD,KAAlD,CAAP;AACF","sourcesContent":["import Logger from 'bunyan';\nimport { name } from '../../../package.json';\n\nconst internalLogger = new Logger({\n   name,\n   streams: [\n      {\n         stream: process.stdout,\n         level: process.env.NODE_ENV === 'production' ? 'info' : 'trace'\n      }\n   ]\n});\n\n/**\n *\n * @typedef Logger\n * @property {function} info\n * @property {function} trace\n * @property {function} debug\n * @property {function} error\n * @property {function} warn\n */\n\n/**\n *\n * @param {string} widgetType\n * @returns Logger\n */\nexport default function (widgetType) {\n   return internalLogger.child({ widget_type: widgetType }, false);\n}\n"],"file":"logger.js"}